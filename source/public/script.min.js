function init_dv(){update_dv(),document.getElementById("add-key").addEventListener("click",()=>{progress_dv(1),fetch("/api/key",{method:"POST"}).then(function(t){update_dv()}).catch(function(t){console.log(t)})})}function timer_dv(){update_dv()}function update_dv(){const t=document.getElementById("output_tbl");let a="";fetch("/api/key",{method:"GET"}).then(t=>t.json()).then(t=>get_req=t).then(()=>{console.log(get_req),get_req.forEach((t,e)=>{a+=`<tr>
                        <th scope="col" class="d-none d-xl-table-cell text-center api-key">
                            <div class="form-outline"> <input class="form-control active" type="text" value="`+t.key+`"
                                    aria-label="readonly api key" readonly="" disabled>
                                <div style="position:absolute; left:0; right:0; top:0; bottom:0;"></div> <label class="form-label"
                                    style="margin-left: 0px;">Readonly</label>
                                <div class="form-notch">
                                    <div class="form-notch-leading" style="width: 9px;"></div>
                                    <div class="form-notch-middle" style="width: 55px;"></div>
                                    <div class="form-notch-trailing"></div>
                                </div>
                            </div>
                        </th>
                        <th scope="col">
                            <div class="input-group align-items-center justify-content-center flex-nowrap">
                                <div class="form-outline float-start"> <input type="text" class="form-control input-name placeholder-active"
                                        value="`+t.name+`">
                                    <div class="form-notch">
                                        <div class="form-notch-leading" style="width: 9px;"></div>
                                        <div class="form-notch-middle" style="width: 0px;"></div>
                                        <div class="form-notch-trailing"></div>
                                    </div>
                                </div> <button type="button" class="btn btn-outline-dark d-table-cell d-xl-none copy-key"> <i
                                        class="fas fa-copy"></i> </button> <button type="button"
                                    class="btn btn-outline-dark d-table-cell d-xl-none del-key"> <i class="fas fa-trash"></i> </button>
                            </div>
                        </th>
                        <th class="d-none d-xl-table-cell"> <button type="button" class="btn btn-outline-dark copy-key"> <i
                                    class="fas fa-copy"></i> </button> <button type="button" class="btn btn-outline-dark del-key"> <i
                                    class="fas fa-trash"></i> </button> </th>
                    </tr>`}),t.innerHTML=a,listeners_dv(),progress_dv(0)}).catch(function(t){console.log(t)})}function index_calc_dv(t){return t%2!=0?t=t/2-.5:t/=2,t}function listeners_dv(){document.querySelectorAll(".api-key > div").forEach((t,e)=>{api_key=document.querySelectorAll(".api-key input")[index_calc_dv(e)].value.trim(),t.addEventListener("click",t=>{navigator.clipboard.writeText(api_key),Swal.fire({title:"API key kopiert:",text:api_key.substr(0,40)+"...",icon:"success",customClass:{confirmButton:"btn btn-outline-dark m-2"},buttonsStyling:!1})})}),document.querySelectorAll(".input-name").forEach((t,e)=>{t.addEventListener("blur",t=>{progress_dv(1),input_name=document.querySelectorAll(".input-name")[e].value,fetch("/api/key?id="+e+"&value="+input_name,{method:"PATCH"}).then(function(t){progress_dv(0)})})}),document.querySelectorAll(".del-key").forEach((t,e)=>{t.addEventListener("click",t=>{Swal.fire({title:"Sind Sie sich sicher?",text:"Sie können dies nicht rückgängig machen!",icon:"warning",showCancelButton:!0,customClass:{confirmButton:"btn btn-danger m-2",cancelButton:"btn btn-outline-dark m-2"},buttonsStyling:!1,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",cancelButtonText:"Abbrechen",confirmButtonText:"Löschen"}).then(t=>{t.isConfirmed&&(progress_dv(1),fetch("/api/key?id="+index_calc_dv(e),{method:"DELETE"}).then(function(t){update_dv()}).catch(function(t){console.log(t)}))})})}),document.querySelectorAll(".copy-key").forEach((t,e)=>{t.addEventListener("click",t=>{api_key=document.querySelectorAll(".api-key input")[index_calc_dv(e)].value.trim(),navigator.clipboard.writeText(api_key),Swal.fire({title:"API key kopiert:",text:api_key.substr(0,40)+"...",icon:"success",customClass:{confirmButton:"btn btn-outline-dark m-2"},buttonsStyling:!1})})})}function progress_dv(t){document.getElementById("loading");1==t?(click_block.open(),loading_animation.on()):(click_block.close(),loading_animation.off())}function update_fi(){document.getElementById("output_tbl");let a="";fetch("/api/tours",{method:"GET"}).then(t=>t.json()).then(t=>get_req=t).then(()=>{console.log(get_req),get_req.forEach((t,e)=>{a+=""}),listeners_dv(),progress_dv(0)}).catch(function(t){console.log(t)})}-1!=window.location.href.indexOf("/devices")&&(init_dv(),setInterval(()=>{timer_dv()},3e4)),-1!=window.location.href.indexOf("/files")&&update_fi();const click_block={container:null,body:null,cssClass:"click_block",check:function(){null==this.body&&(this.body=document.getElementsByTagName("body")[0])},open:function(){return this.check(),this.isOpen()||(this.container=document.createElement("div"),this.container.setAttribute("id","click_block"),this.body.append(this.container),this.body.classList.add(this.cssClass)),this},close:function(){return this.check(),this.isOpen()&&(this.body.classList.remove(this.cssClass),this.container.remove()),this},isOpen:function(){return this.check(),this.body.classList.contains(this.cssClass)}},loading_animation={container:document.getElementById("loading"),on:function(){this.container.style.opacity="1"},off:function(){this.container.style.opacity="0"}};function initMap(){const t=chroma.scale(["blue","yellow","red"]);var e=new google.maps.Map(document.getElementById("map"),{zoom:18,center:new google.maps.LatLng(data_array[1][8],data_array[1][9]),mapTypeId:"terrain"});let a=0;for(i=1;i<data_array.length-2;i++)a<data_array[i][11]&&(a=data_array[i][11]);for(i=1;i<data_array.length-2;i++){var n=new google.maps.LatLng(data_array[i][8],data_array[i][9]),o=new google.maps.LatLng(data_array[i+1][8],data_array[i+1][9]),l=data_array[i][11];polyline=new google.maps.Polyline({path:[n,o],geodesic:!0,strokeColor:t(l/a).toString(),strokeOpacity:1,strokeWeight:2,map:e})}var d=document.getElementById("infoChart").getContext("2d");const r=new Chart(d,{type:"line",responsive:!0,data:{labels:[],datasets:[{label:"km/h",data:[],borderWidth:1,borderColor:["#58508d"],pointStyle:"line"},{label:"C",data:[],borderWidth:1,borderColor:["#ff6361"],pointStyle:"line"},{label:"H",data:[],borderWidth:1,borderColor:["#ffa600"],pointStyle:"line"}]},options:{scales:{y:{beginAtZero:!0,suggestedMax:50}},elements:{point:{radius:0}}}});d=document.getElementById("accChart").getContext("2d");const s=new Chart(d,{type:"line",responsive:!0,data:{labels:[],datasets:[{label:"x",data:[],borderWidth:1,borderColor:["#003f5c"],pointStyle:"line"},{label:"y",data:[],borderWidth:1,borderColor:["#58508d"],pointStyle:"line"},{label:"z",data:[],borderWidth:1,borderColor:["#bc5090"],pointStyle:"line"}]},options:{scales:{y:{beginAtZero:!0}},elements:{point:{radius:0}}}});d=document.getElementById("rotChart").getContext("2d");const c=new Chart(d,{type:"line",responsive:!0,data:{labels:[],datasets:[{label:"x",data:[],borderWidth:1,borderColor:["#003f5c"],pointStyle:"line"},{label:"y",data:[],borderWidth:1,borderColor:["#58508d"],pointStyle:"line"},{label:"z",data:[],borderWidth:1,borderColor:["#bc5090"],pointStyle:"line"}]},options:{scales:{y:{beginAtZero:!0}},elements:{point:{radius:0}}}});for(let t=1;t<data_array.length-2;t++)r.data.labels[t]=data_array[t][7].substring(0,5),r.data.datasets[0].data[t]=data_array[t][11],r.data.datasets[1].data[t]=data_array[t][6],r.data.datasets[2].data[t]=data_array[t][10],s.data.labels[t]=data_array[t][7].substring(0,5),s.data.datasets[0].data[t]=data_array[t][0],s.data.datasets[1].data[t]=data_array[t][1],s.data.datasets[2].data[t]=data_array[t][2],c.data.labels[t]=data_array[t][7].substring(0,5),c.data.datasets[0].data[t]=data_array[t][3],c.data.datasets[1].data[t]=data_array[t][4],c.data.datasets[2].data[t]=data_array[t][5];r.update(),s.update(),c.update()}